generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model accounts {
  id             String         @id
  code           String         @unique
  name           String
  nameAr         String?
  type           AccountType
  currency       String         @default("AED")
  balance        Decimal        @default(0)
  isActive       Boolean        @default(true)
  parentId       String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  accounts       accounts?      @relation("accountsToaccounts", fields: [parentId], references: [id])
  other_accounts accounts[]     @relation("accountsToaccounts")
  transactions   transactions[]
}

model batches {
  id                             String                           @id
  batchNo                        String                           @unique
  rawMaterialId                  String
  origin                         String
  grade                          String
  quality                        String?
  purchaseDate                   DateTime
  expiryDate                     DateTime?
  purchasePrice                  Decimal
  quantity                       Decimal
  unit                           String
  supplier                       String
  supplierInvoice                String?
  notes                          String?
  isActive                       Boolean                          @default(true)
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  raw_materials                  raw_materials                    @relation(fields: [rawMaterialId], references: [id])
  production_batch_raw_materials production_batch_raw_materials[]
  stock_movements                stock_movements[]
}

model bill_of_materials {
  id                      String                    @id
  recipeId                String
  name                    String
  version                 String                    @default("1.0")
  isActive                Boolean                   @default(true)
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime
  recipes                 recipes                   @relation(fields: [recipeId], references: [id])
  bill_of_materials_items bill_of_materials_items[]
}

model bill_of_materials_items {
  id                String            @id
  bomId             String
  rawMaterialId     String
  quantity          Decimal
  unit              String
  wastagePercent    Decimal           @default(0)
  notes             String?
  sortOrder         Int               @default(0)
  bill_of_materials bill_of_materials @relation(fields: [bomId], references: [id], onDelete: Cascade)
  raw_materials     raw_materials     @relation(fields: [rawMaterialId], references: [id])
}

model branding {
  id               String   @id
  companyName      String   @default("Oud & Perfume ERP")
  companyNameAr    String?
  tagline          String?
  taglineAr        String?
  logoUrl          String?
  logoWhiteUrl     String?
  faviconUrl       String?
  loginBgUrl       String?
  primaryColor     String   @default("#d97706")
  primaryHover     String   @default("#b45309")
  accentColor      String   @default("#92400e")
  bgLight          String   @default("#fffbeb")
  bgDark           String   @default("#1f2937")
  textPrimary      String   @default("#111827")
  textSecondary    String   @default("#6b7280")
  textLight        String   @default("#ffffff")
  successColor     String   @default("#10b981")
  warningColor     String   @default("#f59e0b")
  errorColor       String   @default("#ef4444")
  infoColor        String   @default("#3b82f6")
  fontFamily       String   @default("Inter")
  headingFont      String   @default("Inter")
  fontSize         String   @default("medium")
  sidebarStyle     String   @default("light")
  headerStyle      String   @default("light")
  borderRadius     String   @default("medium")
  email            String?
  phone            String?
  whatsapp         String?
  website          String?
  address          String?
  city             String?
  country          String   @default("UAE")
  facebookUrl      String?
  instagramUrl     String?
  twitterUrl       String?
  linkedinUrl      String?
  vatNumber        String?
  tradeNumber      String?
  licenseNumber    String?
  invoicePrefix    String   @default("INV")
  receiptPrefix    String   @default("RCP")
  orderPrefix      String   @default("ORD")
  invoiceFooter    String?
  invoiceFooterAr  String?
  invoiceNotes     String?
  dateFormat       String   @default("DD/MM/YYYY")
  timeFormat       String   @default("24h")
  currency         String   @default("AED")
  currencySymbol   String   @default("AED")
  currencyPosition String   @default("before")
  decimalPlaces    Int      @default(2)
  showWhatsapp     Boolean  @default(true)
  showSocial       Boolean  @default(true)
  showVatNumber    Boolean  @default(true)
  showCompanyInfo  Boolean  @default(true)
  customCss        String?
  isActive         Boolean  @default(true)
  createdAt        DateTime @default(now())
  updatedAt        DateTime
}

model brands {
  id          String   @id
  name        String
  nameArabic  String?
  description String?
  logoUrl     String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  tenantId    String
  tenants     tenants  @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId])
}

model categories {
  id          String   @id
  name        String
  nameArabic  String?
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  tenantId    String
  tenants     tenants  @relation(fields: [tenantId], references: [id], onDelete: Cascade)

  @@index([tenantId])
}

model conversion_units {
  id                                                       String        @id
  fromUnitId                                               String
  toUnitId                                                 String
  conversionRate                                           Decimal
  isActive                                                 Boolean       @default(true)
  createdAt                                                DateTime      @default(now())
  updatedAt                                                DateTime
  raw_materials_conversion_units_fromUnitIdToraw_materials raw_materials @relation("conversion_units_fromUnitIdToraw_materials", fields: [fromUnitId], references: [id])
  raw_materials_conversion_units_toUnitIdToraw_materials   raw_materials @relation("conversion_units_toUnitIdToraw_materials", fields: [toUnitId], references: [id])

  @@unique([fromUnitId, toUnitId])
}

model customer_loyalty {
  id               String           @id
  customerId       String
  loyaltyProgramId String
  points           Int              @default(0)
  totalSpent       Decimal          @default(0)
  totalEarned      Int              @default(0)
  totalRedeemed    Int              @default(0)
  joinedAt         DateTime         @default(now())
  lastActivity     DateTime         @default(now())
  customers        customers        @relation(fields: [customerId], references: [id], onDelete: Cascade)
  loyalty_programs loyalty_programs @relation(fields: [loyaltyProgramId], references: [id])

  @@unique([customerId, loyaltyProgramId])
}

model customer_segment_members {
  id                String            @id
  customerId        String
  segmentId         String
  assignedAt        DateTime          @default(now())
  customers         customers         @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customer_segments customer_segments @relation(fields: [segmentId], references: [id], onDelete: Cascade)

  @@unique([customerId, segmentId])
}

model customer_segments {
  id                       String                     @id
  name                     String                     @unique
  nameAr                   String?
  description              String?
  criteria                 Json
  isActive                 Boolean                    @default(true)
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime
  customer_segment_members customer_segment_members[]
}

model customers {
  id                       String                     @id
  customerNo               String                     @unique
  type                     CustomerType               @default(INDIVIDUAL)
  firstName                String?
  lastName                 String?
  companyName              String?
  email                    String?                    @unique
  phone                    String?
  whatsapp                 String?
  dateOfBirth              DateTime?
  gender                   Gender?
  nationality              String?
  address                  String?
  city                     String?
  emirate                  String?
  country                  String                     @default("UAE")
  postalCode               String?
  vatNumber                String?
  isActive                 Boolean                    @default(true)
  language                 String                     @default("en")
  createdAt                DateTime                   @default(now())
  updatedAt                DateTime
  tenantId                 String
  customer_loyalty         customer_loyalty[]
  customer_segment_members customer_segment_members[]
  tenants                  tenants                    @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_customers_tenant")
  sales                    sales[]
}

model goods_receipt_items {
  id                   String               @id
  goodsReceiptId       String
  purchaseOrderItemId  String
  orderedQty           Decimal
  receivedQty          Decimal
  acceptedQty          Decimal
  rejectedQty          Decimal              @default(0)
  batchNo              String?
  expiryDate           DateTime?
  quality              QualityGrade?
  rejectReason         String?
  notes                String?
  goods_receipts       goods_receipts       @relation(fields: [goodsReceiptId], references: [id], onDelete: Cascade)
  purchase_order_items purchase_order_items @relation(fields: [purchaseOrderItemId], references: [id])
}

model goods_receipts {
  id                  String                @id
  receiptNo           String                @unique
  purchaseOrderId     String
  receivedById        String
  receiptDate         DateTime              @default(now())
  status              GoodsReceiptStatus    @default(PENDING)
  totalReceived       Decimal               @default(0)
  totalAccepted       Decimal               @default(0)
  totalRejected       Decimal               @default(0)
  notes               String?
  createdAt           DateTime              @default(now())
  updatedAt           DateTime
  goods_receipt_items goods_receipt_items[]
  purchase_orders     purchase_orders       @relation(fields: [purchaseOrderId], references: [id])
  users               users                 @relation(fields: [receivedById], references: [id])
  quality_checks      quality_checks[]
}

model hs_codes {
  id            String          @id
  code          String          @unique
  description   String
  dutyRate      Decimal         @default(0)
  vatRate       Decimal         @default(5)
  restrictions  String?
  documents     String[]
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime
  raw_materials raw_materials[]
}

model invoices {
  id          String        @id
  invoiceNo   String        @unique
  saleId      String
  issueDate   DateTime      @default(now())
  dueDate     DateTime?
  status      InvoiceStatus @default(DRAFT)
  subtotal    Decimal
  vatAmount   Decimal
  totalAmount Decimal
  currency    String        @default("AED")
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  sales       sales         @relation(fields: [saleId], references: [id])
}

model loyalty_programs {
  id               String             @id
  name             String             @unique
  nameAr           String?
  description      String?
  pointsPerAED     Decimal            @default(1)
  redemptionRate   Decimal            @default(1)
  minSpendAmount   Decimal            @default(0)
  isActive         Boolean            @default(true)
  startDate        DateTime
  endDate          DateTime?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  customer_loyalty customer_loyalty[]
}

model payments {
  id          String        @id
  paymentNo   String        @unique
  saleId      String
  amount      Decimal
  currency    String        @default("AED")
  method      PaymentMethod
  status      PaymentStatus @default(PENDING)
  paymentDate DateTime      @default(now())
  reference   String?
  notes       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  sales       sales         @relation(fields: [saleId], references: [id])
}

model permissions {
  id               String             @id
  name             String             @unique
  description      String?
  module           String
  action           String
  createdAt        DateTime           @default(now())
  role_permissions role_permissions[]
}

model processing_stages {
  id                 String             @id
  productionBatchId  String
  stageName          String
  stageOrder         Int
  status             ProcessingStatus   @default(PENDING)
  startTime          DateTime?
  endTime            DateTime?
  duration           Int?
  temperature        String?
  notes              String?
  operatorId         String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime
  users              users?             @relation(fields: [operatorId], references: [id])
  production_batches production_batches @relation(fields: [productionBatchId], references: [id], onDelete: Cascade)
}

model procurement_request_items {
  id                   String               @id
  procurementRequestId String
  rawMaterialId        String?
  productId            String?
  quantity             Decimal
  unit                 String
  estimatedUnitPrice   Decimal              @default(0)
  estimatedTotalPrice  Decimal              @default(0)
  specifications       String?
  justification        String?
  suggestedSupplierId  String?
  procurement_requests procurement_requests @relation(fields: [procurementRequestId], references: [id], onDelete: Cascade)
  products             products?            @relation(fields: [productId], references: [id])
  raw_materials        raw_materials?       @relation(fields: [rawMaterialId], references: [id])
  suppliers            suppliers?           @relation(fields: [suggestedSupplierId], references: [id])
}

model procurement_requests {
  id                                              String                      @id
  requestNo                                       String                      @unique
  requestedById                                   String
  approvedById                                    String?
  storeId                                         String?
  type                                            ProcurementRequestType      @default(REGULAR)
  priority                                        Priority                    @default(MEDIUM)
  status                                          ProcurementRequestStatus    @default(PENDING)
  requestDate                                     DateTime                    @default(now())
  requiredDate                                    DateTime
  justification                                   String?
  notes                                           String?
  totalEstimatedCost                              Decimal                     @default(0)
  currency                                        String                      @default("AED")
  createdAt                                       DateTime                    @default(now())
  updatedAt                                       DateTime
  procurement_request_items                       procurement_request_items[]
  users_procurement_requests_approvedByIdTousers  users?                      @relation("procurement_requests_approvedByIdTousers", fields: [approvedById], references: [id])
  users_procurement_requests_requestedByIdTousers users                       @relation("procurement_requests_requestedByIdTousers", fields: [requestedById], references: [id])
  stores                                          stores?                     @relation(fields: [storeId], references: [id])
}

model production_batch_raw_materials {
  id                 String             @id
  productionBatchId  String
  batchId            String
  plannedQty         Decimal
  actualQty          Decimal            @default(0)
  unit               String
  cost               Decimal            @default(0)
  batches            batches            @relation(fields: [batchId], references: [id])
  production_batches production_batches @relation(fields: [productionBatchId], references: [id], onDelete: Cascade)

  @@unique([productionBatchId, batchId])
}

model production_batches {
  id                             String                           @id
  batchNo                        String                           @unique
  productId                      String
  recipeId                       String?
  plannedQty                     Decimal
  actualQty                      Decimal                          @default(0)
  unit                           String
  status                         ProductionStatus                 @default(PLANNED)
  startDate                      DateTime?
  completionDate                 DateTime?
  cost                           Decimal                          @default(0)
  currency                       String                           @default("AED")
  notes                          String?
  supervisorId                   String
  createdAt                      DateTime                         @default(now())
  updatedAt                      DateTime
  processing_stages              processing_stages[]
  production_batch_raw_materials production_batch_raw_materials[]
  products                       products                         @relation(fields: [productId], references: [id])
  recipes                        recipes?                         @relation(fields: [recipeId], references: [id])
  users                          users                            @relation(fields: [supervisorId], references: [id])
  quality_controls               quality_controls[]
}

model products {
  id                        String                      @id
  code                      String                      @unique
  name                      String
  nameAr                    String?
  description               String?
  category                  String
  subcategory               String?
  baseUnit                  String
  costPrice                 Decimal                     @default(0)
  sellingPrice              Decimal                     @default(0)
  currency                  String                      @default("AED")
  vatRate                   Decimal                     @default(5)
  minStockLevel             Decimal                     @default(0)
  maxStockLevel             Decimal?
  shelfLife                 Int?
  barcode                   String?
  sku                       String?                     @unique
  imageUrl                  String?
  isActive                  Boolean                     @default(true)
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime
  tenantId                  String
  procurement_request_items procurement_request_items[]
  production_batches        production_batches[]
  tenants                   tenants                     @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_products_tenant")
  purchase_order_items      purchase_order_items[]
  recipes                   recipes[]
  reorder_points            reorder_points[]
  sale_items                sale_items[]
  stock_movements           stock_movements[]
  store_inventory           store_inventory[]
  supplier_products         supplier_products[]
  transfer_items            transfer_items[]
}

model profit_tracking {
  id          String   @id
  period      String   @unique
  revenue     Decimal  @default(0)
  cogs        Decimal  @default(0)
  grossProfit Decimal  @default(0)
  expenses    Decimal  @default(0)
  netProfit   Decimal  @default(0)
  currency    String   @default("AED")
  createdAt   DateTime @default(now())
  updatedAt   DateTime
}

model promotions {
  id                String            @id
  code              String            @unique
  name              String
  nameAr            String?
  description       String?
  type              PromotionType
  discountPercent   Decimal?
  discountAmount    Decimal?
  minPurchaseAmount Decimal?
  maxDiscountAmount Decimal?
  startDate         DateTime
  endDate           DateTime
  usageLimit        Int?
  usageCount        Int               @default(0)
  isActive          Boolean           @default(true)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime
  sale_promotions   sale_promotions[]
}

model purchase_order_items {
  id                  String                @id
  purchaseOrderId     String
  rawMaterialId       String?
  productId           String?
  quantity            Decimal
  unit                String
  unitPrice           Decimal
  discountPercent     Decimal               @default(0)
  discountAmount      Decimal               @default(0)
  vatRate             Decimal               @default(5)
  vatAmount           Decimal               @default(0)
  totalAmount         Decimal
  receivedQty         Decimal               @default(0)
  pendingQty          Decimal
  specifications      String?
  notes               String?
  goods_receipt_items goods_receipt_items[]
  products            products?             @relation(fields: [productId], references: [id])
  purchase_orders     purchase_orders       @relation(fields: [purchaseOrderId], references: [id], onDelete: Cascade)
  raw_materials       raw_materials?        @relation(fields: [rawMaterialId], references: [id])
}

model purchase_orders {
  id                                         String                 @id
  poNumber                                   String                 @unique
  supplierId                                 String
  requestedById                              String
  approvedById                               String?
  storeId                                    String?
  status                                     PurchaseOrderStatus    @default(DRAFT)
  priority                                   Priority               @default(MEDIUM)
  type                                       PurchaseOrderType      @default(REGULAR)
  orderDate                                  DateTime               @default(now())
  requestedDate                              DateTime
  expectedDate                               DateTime?
  deliveryDate                               DateTime?
  subtotal                                   Decimal                @default(0)
  discountAmount                             Decimal                @default(0)
  vatAmount                                  Decimal                @default(0)
  shippingCost                               Decimal                @default(0)
  totalAmount                                Decimal                @default(0)
  currency                                   String                 @default("AED")
  paymentTerms                               String?
  deliveryTerms                              String?
  notes                                      String?
  internalNotes                              String?
  approvalWorkflow                           Json?
  createdAt                                  DateTime               @default(now())
  updatedAt                                  DateTime
  goods_receipts                             goods_receipts[]
  purchase_order_items                       purchase_order_items[]
  users_purchase_orders_approvedByIdTousers  users?                 @relation("purchase_orders_approvedByIdTousers", fields: [approvedById], references: [id])
  users_purchase_orders_requestedByIdTousers users                  @relation("purchase_orders_requestedByIdTousers", fields: [requestedById], references: [id])
  stores                                     stores?                @relation(fields: [storeId], references: [id])
  suppliers                                  suppliers              @relation(fields: [supplierId], references: [id])
  shipments                                  shipments[]
  supplier_invoices                          supplier_invoices[]

  @@index([orderDate])
  @@index([status])
}

model quality_checks {
  id                 String           @id
  goodsReceiptId     String
  checkedById        String
  checkType          QualityCheckType
  result             QualityResult
  visualInspection   String?
  fragranceProfile   String?
  alcoholContent     Decimal?
  purityTest         String?
  packagingCondition String?
  passed             Boolean          @default(false)
  grade              QualityGrade?
  notes              String?
  recommendations    String?
  checkDate          DateTime         @default(now())
  createdAt          DateTime         @default(now())
  users              users            @relation(fields: [checkedById], references: [id])
  goods_receipts     goods_receipts   @relation(fields: [goodsReceiptId], references: [id])
}

model quality_controls {
  id                 String             @id
  productionBatchId  String
  checkType          String
  result             QualityResult
  alcoholPercentage  Decimal?
  fragranceNotes     String?
  agingDays          Int?
  visualInspection   String?
  testDate           DateTime           @default(now())
  testedById         String
  notes              String?
  recommendations    String?
  createdAt          DateTime           @default(now())
  production_batches production_batches @relation(fields: [productionBatchId], references: [id])
  users              users              @relation(fields: [testedById], references: [id])
}

model raw_materials {
  id                                                          String                      @id
  code                                                        String                      @unique
  name                                                        String
  nameAr                                                      String?
  description                                                 String?
  category                                                    String
  subcategory                                                 String?
  baseUnit                                                    String
  costPrice                                                   Decimal                     @default(0)
  currency                                                    String                      @default("AED")
  supplier                                                    String?
  supplierCode                                                String?
  minStockLevel                                               Decimal                     @default(0)
  maxStockLevel                                               Decimal?
  shelfLife                                                   Int?
  storageTemp                                                 String?
  hsCodeId                                                    String?
  supplierId                                                  String?
  isActive                                                    Boolean                     @default(true)
  createdAt                                                   DateTime                    @default(now())
  updatedAt                                                   DateTime
  batches                                                     batches[]
  bill_of_materials_items                                     bill_of_materials_items[]
  conversion_units_conversion_units_fromUnitIdToraw_materials conversion_units[]          @relation("conversion_units_fromUnitIdToraw_materials")
  conversion_units_conversion_units_toUnitIdToraw_materials   conversion_units[]          @relation("conversion_units_toUnitIdToraw_materials")
  procurement_request_items                                   procurement_request_items[]
  purchase_order_items                                        purchase_order_items[]
  hs_codes                                                    hs_codes?                   @relation(fields: [hsCodeId], references: [id])
  suppliers                                                   suppliers?                  @relation(fields: [supplierId], references: [id])
  reorder_points                                              reorder_points[]
  stock_movements                                             stock_movements[]
  store_inventory                                             store_inventory[]
  supplier_products                                           supplier_products[]
  transfer_items                                              transfer_items[]
}

model recipes {
  id                 String               @id
  productId          String
  version            String               @default("1.0")
  name               String
  description        String?
  yieldQty           Decimal
  yieldUnit          String
  instructions       String?
  notes              String?
  isActive           Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  bill_of_materials  bill_of_materials[]
  production_batches production_batches[]
  products           products             @relation(fields: [productId], references: [id])

  @@unique([productId, version])
}

model reorder_points {
  id            String         @id
  storeId       String?
  rawMaterialId String?
  productId     String?
  minLevel      Decimal
  maxLevel      Decimal
  reorderLevel  Decimal
  reorderQty    Decimal
  leadTime      Int            @default(0)
  safetyStock   Decimal        @default(0)
  isActive      Boolean        @default(true)
  lastTriggered DateTime?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime
  products      products?      @relation(fields: [productId], references: [id])
  raw_materials raw_materials? @relation(fields: [rawMaterialId], references: [id])
  stores        stores?        @relation(fields: [storeId], references: [id])

  @@unique([storeId, productId])
  @@unique([storeId, rawMaterialId])
}

model role_permissions {
  id           String      @id
  roleId       String
  permissionId String
  permissions  permissions @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  roles        roles       @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@unique([roleId, permissionId])
}

model roles {
  id               String             @id
  name             String             @unique
  description      String?
  isActive         Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  role_permissions role_permissions[]
  user_roles       user_roles[]
}

model sale_items {
  id              String   @id
  saleId          String
  productId       String
  quantity        Decimal
  unit            String
  unitPrice       Decimal
  discountPercent Decimal  @default(0)
  discountAmount  Decimal  @default(0)
  vatRate         Decimal  @default(5)
  vatAmount       Decimal  @default(0)
  totalAmount     Decimal
  notes           String?
  products        products @relation(fields: [productId], references: [id])
  sales           sales    @relation(fields: [saleId], references: [id], onDelete: Cascade)
}

model sale_promotions {
  id             String     @id
  saleId         String
  promotionId    String
  discountAmount Decimal
  promotions     promotions @relation(fields: [promotionId], references: [id])
  sales          sales      @relation(fields: [saleId], references: [id], onDelete: Cascade)

  @@unique([saleId, promotionId])
}

model sales {
  id                             String            @id
  saleNo                         String            @unique
  storeId                        String
  customerId                     String?
  status                         SaleStatus        @default(PENDING)
  saleDate                       DateTime          @default(now())
  dueDate                        DateTime?
  subtotal                       Decimal           @default(0)
  discountAmount                 Decimal           @default(0)
  vatAmount                      Decimal           @default(0)
  totalAmount                    Decimal           @default(0)
  currency                       String            @default("AED")
  paymentStatus                  PaymentStatus     @default(PENDING)
  paymentMethod                  String?
  notes                          String?
  createdById                    String
  updatedById                    String?
  createdAt                      DateTime          @default(now())
  updatedAt                      DateTime
  invoices                       invoices[]
  payments                       payments[]
  sale_items                     sale_items[]
  sale_promotions                sale_promotions[]
  users_sales_createdByIdTousers users             @relation("sales_createdByIdTousers", fields: [createdById], references: [id])
  customers                      customers?        @relation(fields: [customerId], references: [id])
  stores                         stores            @relation(fields: [storeId], references: [id])
  users_sales_updatedByIdTousers users?            @relation("sales_updatedByIdTousers", fields: [updatedById], references: [id])

  @@index([saleDate])
  @@index([status])
}

model shipment_documents {
  id           String       @id
  shipmentId   String
  type         DocumentType
  fileName     String
  fileUrl      String
  fileSize     Int?
  mimeType     String?
  uploadedAt   DateTime     @default(now())
  uploadedById String?
  shipments    shipments    @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
  users        users?       @relation(fields: [uploadedById], references: [id])
}

model shipment_tracking {
  id          String    @id
  shipmentId  String
  location    String
  status      String
  description String?
  eventDate   DateTime
  latitude    Decimal?
  longitude   Decimal?
  createdAt   DateTime  @default(now())
  shipments   shipments @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
}

model shipments {
  id                 String               @id
  shipmentNo         String               @unique
  purchaseOrderId    String?
  supplierId         String
  carrier            ShippingCarrier
  trackingNumber     String?
  awbNumber          String?
  status             ShipmentStatus       @default(PREPARING)
  priority           Priority             @default(MEDIUM)
  originAddress      String
  originCity         String
  originCountry      String
  destinationAddress String
  destinationCity    String
  destinationCountry String
  shipDate           DateTime?
  estimatedArrival   DateTime?
  actualArrival      DateTime?
  packages           Int                  @default(1)
  totalWeight        Decimal?
  totalVolume        Decimal?
  dimensions         String?
  shippingCost       Decimal              @default(0)
  insurance          Decimal              @default(0)
  customsDuty        Decimal              @default(0)
  otherCharges       Decimal              @default(0)
  totalCost          Decimal              @default(0)
  currency           String               @default("AED")
  hsCode             String?
  customsDeclaration String?
  commercialInvoice  String?
  packingList        String?
  certificateOrigin  String?
  importLicense      String?
  notes              String?
  internalNotes      String?
  createdAt          DateTime             @default(now())
  updatedAt          DateTime
  shipment_documents shipment_documents[]
  shipment_tracking  shipment_tracking[]
  purchase_orders    purchase_orders?     @relation(fields: [purchaseOrderId], references: [id])
  suppliers          suppliers            @relation(fields: [supplierId], references: [id])

  @@index([status])
  @@index([trackingNumber])
}

model stock_movements {
  id            String            @id
  movementNo    String            @unique
  type          StockMovementType
  storeId       String?
  rawMaterialId String?
  productId     String?
  batchId       String?
  quantity      Decimal
  unit          String
  unitCost      Decimal?
  totalCost     Decimal?
  currency      String            @default("AED")
  reason        String?
  referenceType String?
  referenceId   String?
  notes         String?
  movementDate  DateTime          @default(now())
  createdById   String
  createdAt     DateTime          @default(now())
  batches       batches?          @relation(fields: [batchId], references: [id])
  users         users             @relation(fields: [createdById], references: [id])
  products      products?         @relation(fields: [productId], references: [id])
  raw_materials raw_materials?    @relation(fields: [rawMaterialId], references: [id])
  stores        stores?           @relation(fields: [storeId], references: [id])

  @@index([movementDate])
  @@index([referenceType, referenceId])
  @@index([type])
}

model store_inventory {
  id            String         @id
  storeId       String
  rawMaterialId String?
  productId     String?
  quantity      Decimal        @default(0)
  reservedQty   Decimal        @default(0)
  unit          String
  lastUpdated   DateTime       @default(now())
  products      products?      @relation(fields: [productId], references: [id])
  raw_materials raw_materials? @relation(fields: [rawMaterialId], references: [id])
  stores        stores         @relation(fields: [storeId], references: [id])

  @@unique([storeId, productId])
  @@unique([storeId, rawMaterialId])
}

model stores {
  id                                      String                 @id
  code                                    String                 @unique
  name                                    String
  nameAr                                  String?
  address                                 String
  city                                    String
  emirate                                 String
  country                                 String                 @default("UAE")
  postalCode                              String?
  phone                                   String?
  email                                   String?
  isActive                                Boolean                @default(true)
  isWarehouse                             Boolean                @default(false)
  createdAt                               DateTime               @default(now())
  updatedAt                               DateTime
  tenantId                                String
  procurement_requests                    procurement_requests[]
  purchase_orders                         purchase_orders[]
  reorder_points                          reorder_points[]
  sales                                   sales[]
  stock_movements                         stock_movements[]
  store_inventory                         store_inventory[]
  tenants                                 tenants                @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_stores_tenant")
  transfers_transfers_fromStoreIdTostores transfers[]            @relation("transfers_fromStoreIdTostores")
  transfers_transfers_toStoreIdTostores   transfers[]            @relation("transfers_toStoreIdTostores")
  user_stores                             user_stores[]
}

model supplier_evaluations {
  id                 String    @id
  supplierId         String
  evaluatedById      String
  period             String
  qualityScore       Decimal   @default(0)
  deliveryScore      Decimal   @default(0)
  serviceScore       Decimal   @default(0)
  priceScore         Decimal   @default(0)
  communicationScore Decimal   @default(0)
  overallScore       Decimal   @default(0)
  rating             Decimal   @default(0)
  strengths          String?
  weaknesses         String?
  recommendations    String?
  evaluationDate     DateTime  @default(now())
  createdAt          DateTime  @default(now())
  users              users     @relation(fields: [evaluatedById], references: [id])
  suppliers          suppliers @relation(fields: [supplierId], references: [id])

  @@unique([supplierId, period])
}

model supplier_invoices {
  id                String                @id
  invoiceNo         String                @unique
  supplierInvoiceNo String
  purchaseOrderId   String?
  supplierId        String
  invoiceDate       DateTime
  dueDate           DateTime?
  status            SupplierInvoiceStatus @default(RECEIVED)
  subtotal          Decimal
  discountAmount    Decimal               @default(0)
  vatAmount         Decimal               @default(0)
  totalAmount       Decimal
  paidAmount        Decimal               @default(0)
  balanceAmount     Decimal
  currency          String                @default("AED")
  paymentTerms      String?
  notes             String?
  createdAt         DateTime              @default(now())
  updatedAt         DateTime
  purchase_orders   purchase_orders?      @relation(fields: [purchaseOrderId], references: [id])
  suppliers         suppliers             @relation(fields: [supplierId], references: [id])
  supplier_payments supplier_payments[]

  @@index([dueDate])
  @@index([status])
}

model supplier_payments {
  id                String            @id
  paymentNo         String            @unique
  supplierInvoiceId String
  amount            Decimal
  currency          String            @default("AED")
  paymentMethod     PaymentMethod
  paymentDate       DateTime          @default(now())
  reference         String?
  notes             String?
  createdAt         DateTime          @default(now())
  supplier_invoices supplier_invoices @relation(fields: [supplierInvoiceId], references: [id])
}

model supplier_products {
  id            String         @id
  supplierId    String
  rawMaterialId String?
  productId     String?
  supplierSku   String?
  supplierName  String
  unitPrice     Decimal
  currency      String         @default("AED")
  minOrderQty   Decimal        @default(1)
  leadTime      Int            @default(0)
  isPreferred   Boolean        @default(false)
  isActive      Boolean        @default(true)
  lastUpdated   DateTime       @default(now())
  products      products?      @relation(fields: [productId], references: [id])
  raw_materials raw_materials? @relation(fields: [rawMaterialId], references: [id])
  suppliers     suppliers      @relation(fields: [supplierId], references: [id], onDelete: Cascade)

  @@unique([supplierId, productId])
  @@unique([supplierId, rawMaterialId])
}

model suppliers {
  id                        String                      @id
  code                      String                      @unique
  name                      String
  nameAr                    String?
  type                      SupplierType                @default(LOCAL)
  category                  String
  contactPerson             String?
  email                     String?
  phone                     String?
  whatsapp                  String?
  website                   String?
  address                   String?
  city                      String?
  state                     String?
  country                   String
  postalCode                String?
  vatNumber                 String?
  tradeNumber               String?
  licenseNumber             String?
  establishedYear           Int?
  performanceScore          Decimal                     @default(0)
  rating                    Decimal                     @default(0)
  totalOrders               Int                         @default(0)
  onTimeDeliveries          Int                         @default(0)
  qualityScore              Decimal                     @default(0)
  responseTime              Int                         @default(0)
  paymentTerms              String?
  creditLimit               Decimal                     @default(0)
  currency                  String                      @default("AED")
  discountPercent           Decimal                     @default(0)
  certifications            Json?
  complianceStatus          ComplianceStatus            @default(PENDING)
  lastAuditDate             DateTime?
  nextAuditDate             DateTime?
  leadTime                  Int                         @default(0)
  minOrderValue             Decimal                     @default(0)
  isPreferred               Boolean                     @default(false)
  isActive                  Boolean                     @default(true)
  tags                      String[]
  notes                     String?
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime
  tenantId                  String
  procurement_request_items procurement_request_items[]
  purchase_orders           purchase_orders[]
  raw_materials             raw_materials[]
  shipments                 shipments[]
  supplier_evaluations      supplier_evaluations[]
  supplier_invoices         supplier_invoices[]
  supplier_products         supplier_products[]
  tenants                   tenants                     @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_suppliers_tenant")
}

model tenants {
  id         String       @id
  name       String
  slug       String       @unique
  domain     String?
  isActive   Boolean      @default(true)
  status     String       @default("ACTIVE")
  plan       String       @default("FREE")
  settings   Json?
  createdAt  DateTime     @default(now()) @db.Timestamp(6)
  updatedAt  DateTime     @default(now()) @db.Timestamp(6)
  brands     brands[]
  categories categories[]
  customers  customers[]
  products   products[]
  stores     stores[]
  suppliers  suppliers[]
}

model transactions {
  id                                    String            @id
  transactionNo                         String            @unique
  type                                  TransactionType
  accountId                             String
  amount                                Decimal
  currency                              String            @default("AED")
  description                           String
  referenceType                         String?
  referenceId                           String?
  transactionDate                       DateTime          @default(now())
  vatAmount                             Decimal           @default(0)
  status                                TransactionStatus @default(PENDING)
  createdById                           String
  updatedById                           String?
  createdAt                             DateTime          @default(now())
  updatedAt                             DateTime
  accounts                              accounts          @relation(fields: [accountId], references: [id])
  users_transactions_createdByIdTousers users             @relation("transactions_createdByIdTousers", fields: [createdById], references: [id])
  users_transactions_updatedByIdTousers users?            @relation("transactions_updatedByIdTousers", fields: [updatedById], references: [id])

  @@index([referenceType, referenceId])
  @@index([transactionDate])
  @@index([type])
}

model transfer_items {
  id             String         @id
  transferId     String
  rawMaterialId  String?
  productId      String?
  requestedQty   Decimal
  transferredQty Decimal        @default(0)
  unit           String
  notes          String?
  products       products?      @relation(fields: [productId], references: [id])
  raw_materials  raw_materials? @relation(fields: [rawMaterialId], references: [id])
  transfers      transfers      @relation(fields: [transferId], references: [id], onDelete: Cascade)
}

model transfers {
  id                                   String           @id
  transferNo                           String           @unique
  fromStoreId                          String
  toStoreId                            String
  status                               TransferStatus   @default(PENDING)
  notes                                String?
  transferDate                         DateTime         @default(now())
  completedDate                        DateTime?
  createdAt                            DateTime         @default(now())
  updatedAt                            DateTime
  transfer_items                       transfer_items[]
  stores_transfers_fromStoreIdTostores stores           @relation("transfers_fromStoreIdTostores", fields: [fromStoreId], references: [id])
  stores_transfers_toStoreIdTostores   stores           @relation("transfers_toStoreIdTostores", fields: [toStoreId], references: [id])
}

model user_roles {
  id     String @id
  userId String
  roleId String
  roles  roles  @relation(fields: [roleId], references: [id], onDelete: Cascade)
  users  users  @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, roleId])
}

model user_stores {
  id         String   @id
  userId     String
  storeId    String
  isDefault  Boolean  @default(false)
  assignedAt DateTime @default(now())
  stores     stores   @relation(fields: [storeId], references: [id], onDelete: Cascade)
  users      users    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, storeId])
}

model users {
  id                                                             String                 @id
  email                                                          String                 @unique
  username                                                       String                 @unique
  password                                                       String
  firstName                                                      String
  lastName                                                       String
  phone                                                          String?
  avatar                                                         String?
  isActive                                                       Boolean                @default(true)
  language                                                       String                 @default("en")
  timezone                                                       String                 @default("Asia/Dubai")
  lastLoginAt                                                    DateTime?
  createdAt                                                      DateTime               @default(now())
  updatedAt                                                      DateTime
  tenantId                                                       String
  goods_receipts                                                 goods_receipts[]
  processing_stages                                              processing_stages[]
  procurement_requests_procurement_requests_approvedByIdTousers  procurement_requests[] @relation("procurement_requests_approvedByIdTousers")
  procurement_requests_procurement_requests_requestedByIdTousers procurement_requests[] @relation("procurement_requests_requestedByIdTousers")
  production_batches                                             production_batches[]
  purchase_orders_purchase_orders_approvedByIdTousers            purchase_orders[]      @relation("purchase_orders_approvedByIdTousers")
  purchase_orders_purchase_orders_requestedByIdTousers           purchase_orders[]      @relation("purchase_orders_requestedByIdTousers")
  quality_checks                                                 quality_checks[]
  quality_controls                                               quality_controls[]
  sales_sales_createdByIdTousers                                 sales[]                @relation("sales_createdByIdTousers")
  sales_sales_updatedByIdTousers                                 sales[]                @relation("sales_updatedByIdTousers")
  shipment_documents                                             shipment_documents[]
  stock_movements                                                stock_movements[]
  supplier_evaluations                                           supplier_evaluations[]
  transactions_transactions_createdByIdTousers                   transactions[]         @relation("transactions_createdByIdTousers")
  transactions_transactions_updatedByIdTousers                   transactions[]         @relation("transactions_updatedByIdTousers")
  user_roles                                                     user_roles[]
  user_stores                                                    user_stores[]
}

model vat_records {
  id            String    @id
  recordNo      String    @unique
  type          VATType
  amount        Decimal
  vatAmount     Decimal
  vatRate       Decimal   @default(5)
  currency      String    @default("AED")
  description   String
  referenceType String
  referenceId   String
  recordDate    DateTime  @default(now())
  period        String
  status        VATStatus @default(ACTIVE)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime

  @@index([period])
  @@index([type])
}

enum AccountType {
  ASSET
  LIABILITY
  EQUITY
  REVENUE
  EXPENSE
}

enum ComplianceStatus {
  PENDING
  APPROVED
  CONDITIONAL
  REJECTED
  EXPIRED
}

enum CustomerType {
  INDIVIDUAL
  CORPORATE
}

enum DocumentType {
  COMMERCIAL_INVOICE
  PACKING_LIST
  CERTIFICATE_ORIGIN
  IMPORT_LICENSE
  CUSTOMS_DECLARATION
  INSPECTION_CERTIFICATE
  INSURANCE_CERTIFICATE
  BILL_OF_LADING
  AIR_WAYBILL
  OTHER
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum GoodsReceiptStatus {
  PENDING
  PARTIALLY_RECEIVED
  RECEIVED
  QUALITY_CHECK
  ACCEPTED
  REJECTED
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
  CANCELLED
}

enum PaymentMethod {
  CASH
  CARD
  BANK_TRANSFER
  CHEQUE
  DIGITAL_WALLET
}

enum PaymentStatus {
  PENDING
  PARTIAL
  PAID
  OVERDUE
  CANCELLED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ProcessingStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
}

enum ProcurementRequestStatus {
  PENDING
  UNDER_REVIEW
  APPROVED
  REJECTED
  CONVERTED_TO_PO
  CANCELLED
}

enum ProcurementRequestType {
  REGULAR
  URGENT
  CAPITAL
  SERVICE
  MAINTENANCE
}

enum ProductionStatus {
  PLANNED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  ON_HOLD
}

enum PromotionType {
  PERCENTAGE
  FIXED_AMOUNT
  BUY_X_GET_Y
}

enum PurchaseOrderStatus {
  DRAFT
  PENDING_APPROVAL
  APPROVED
  SENT
  ACKNOWLEDGED
  PARTIALLY_RECEIVED
  RECEIVED
  COMPLETED
  CANCELLED
}

enum PurchaseOrderType {
  REGULAR
  URGENT
  BLANKET
  CONTRACT
}

enum QualityCheckType {
  VISUAL
  FRAGRANCE
  CHEMICAL
  PACKAGING
  DOCUMENTATION
  COMPLETE
}

enum QualityGrade {
  A_PREMIUM
  B_STANDARD
  C_BASIC
  REJECTED
}

enum QualityResult {
  PASSED
  FAILED
  CONDITIONAL
  PENDING
}

enum SaleStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
  RETURNED
}

enum ShipmentStatus {
  PREPARING
  DISPATCHED
  IN_TRANSIT
  CUSTOMS_CLEARANCE
  OUT_FOR_DELIVERY
  DELIVERED
  DELAYED
  CANCELLED
  RETURNED
}

enum ShippingCarrier {
  ARAMEX
  DHL
  FEDEX
  UPS
  EMIRATES_POST
  ROAD_TRANSPORT
  SEA_FREIGHT
  AIR_FREIGHT
  OTHER
}

enum StockMovementType {
  IN
  OUT
  TRANSFER_IN
  TRANSFER_OUT
  ADJUSTMENT
  PRODUCTION_IN
  PRODUCTION_OUT
  EXPIRED
  DAMAGED
}

enum SupplierInvoiceStatus {
  RECEIVED
  UNDER_REVIEW
  APPROVED
  DISPUTED
  PAID
  OVERDUE
  CANCELLED
}

enum SupplierType {
  LOCAL
  REGIONAL
  INTERNATIONAL
  MANUFACTURER
  DISTRIBUTOR
  AGENT
}

enum TransactionStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum TransactionType {
  DEBIT
  CREDIT
}

enum TransferStatus {
  PENDING
  IN_TRANSIT
  COMPLETED
  CANCELLED
}

enum VATStatus {
  ACTIVE
  REVERSED
  CANCELLED
}

enum VATType {
  INPUT
  OUTPUT
}
