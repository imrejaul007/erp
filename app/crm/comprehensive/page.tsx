'use client';

import { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Separator } from '@/components/ui/separator';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Progress } from '@/components/ui/progress';
import { Textarea } from '@/components/ui/textarea';
import { Calendar } from '@/components/ui/calendar';
import {
  Users,
  Plus,
  Search,
  Filter,
  Download,
  Upload,
  RefreshCw,
  AlertTriangle,
  CheckCircle,
  Clock,
  Star,
  Crown,
  Gift,
  Heart,
  MessageSquare,
  Mail,
  Phone,
  MapPin,
  Calendar as CalendarIcon,
  TrendingUp,
  TrendingDown,
  BarChart3,
  Eye,
  Edit,
  Trash2,
  Settings,
  Target,
  Zap,
  Archive,
  Percent,
  DollarSign,
  Package,
  ShoppingCart,
  Award,
  Gem,
  UserPlus,
  UserCheck,
  UserX,
  Activity,
  PieChart,
  LineChart,
  Send,
  Bell,
  Flag,
  Bookmark,
  ThumbsUp,
  ThumbsDown,
  MessageCircle,
  Globe,
  Smartphone,
  Cake,
  MapPinIcon
} from 'lucide-react';

// Comprehensive customer database for UAE perfume & oud business
const customersDatabase = [
  {
    id: 'CUST001',
    customerNumber: 'VIP-001',
    name: 'Ahmed Khalid Al-Rashid',
    nameArabic: 'أحمد خالد الراشد',
    title: 'Mr.',
    email: 'ahmed.rashid@emirates.com',
    phone: '+971501234567',
    whatsapp: '+971501234567',
    nationality: 'UAE',
    dateOfBirth: '1985-03-15',
    gender: 'Male',
    occupation: 'Business Executive',
    company: 'Emirates Group',

    // Address Information\n    addresses: [\n      {\n        type: 'primary',\n        street: 'Villa 245, Jumeirah 1',\n        area: 'Jumeirah',\n        city: 'Dubai',\n        emirate: 'Dubai',\n        country: 'UAE',\n        postalCode: '00000',\n        coordinates: { lat: 25.2048, lng: 55.2708 }\n      },\n      {\n        type: 'work',\n        street: 'Emirates Towers, Sheikh Zayed Road',\n        area: 'DIFC',\n        city: 'Dubai',\n        emirate: 'Dubai',\n        country: 'UAE',\n        postalCode: '00000'\n      }\n    ],\n\n    // Customer Classification\n    customerType: 'VIP',\n    segment: 'High Value',\n    acquisitionChannel: 'Referral',\n    referredBy: 'Mohammad Al-Maktoum',\n    registrationDate: '2022-05-15',\n    lastVisit: '2024-01-20',\n    status: 'Active',\n
    // Financial Information\n    totalSpent: 45750,\n    averageOrderValue: 850,\n    totalOrders: 54,\n    creditLimit: 10000,\n    paymentTerms: 'Net 30',\n    preferredPaymentMethod: 'Credit Card',\n    \n    // Loyalty Program\n    loyaltyTier: 'Platinum',\n    loyaltyPoints: 4575,\n    loyaltyPointsValue: 457.5, // AED\n    cashbackBalance: 915,\n    nextTierRequirement: 50000,\n    \n    // Preferences & Behavior\n    preferredCategories: ['Premium Oud', 'Attar', 'Gift Sets'],\n    favoriteProducts: ['Royal Oud Signature', 'Cambodian Premium', 'Rose Attar Deluxe'],\n    preferredBrands: ['Royal Collection', 'Traditional Masters'],\n    seasonalPreferences: ['Ramadan Specials', 'Eid Collections'],\n    shoppingBehavior: {\n      averageVisitDuration: 45, // minutes\n      purchaseFrequency: 'Weekly',\n      priceSenitivity: 'Low',\n      brandLoyalty: 'High',\n      occasionBuying: ['Gifts', 'Personal Use', 'Corporate Gifts']\n    },\n    \n    // Communication Preferences\n    communicationPreferences: {\n      primary: 'WhatsApp',\n      email: true,\n      sms: false,\n      phone: true,\n      whatsapp: true,\n      language: 'Arabic',\n      frequency: 'Weekly',\n      topics: ['New Arrivals', 'Exclusive Offers', 'Events']\n    },\n    \n    // Special Occasions & Events\n    specialOccasions: [\n      { type: 'Birthday', date: '03-15', notes: 'Prefers traditional oud gifts' },\n      { type: 'Wedding Anniversary', date: '08-20', notes: 'Buys romantic attars' },\n      { type: 'Eid Al-Fitr', date: 'varies', notes: 'Large family gift orders' },\n      { type: 'National Day', date: '12-02', notes: 'Corporate gift requirements' }\n    ],\n    \n    // Family Information\n    familyMembers: [\n      { name: 'Fatima Al-Rashid', relationship: 'Wife', preferences: ['Rose Attars', 'Floral Perfumes'] },\n      { name: 'Omar Al-Rashid', relationship: 'Son', age: 16, preferences: ['Light Fragrances'] },\n      { name: 'Aisha Al-Rashid', relationship: 'Daughter', age: 14, preferences: ['Sweet Attars'] }\n    ],\n    \n    // Notes & History\n    notes: 'Prefers traditional and authentic oud varieties. Very knowledgeable about quality. Often brings guests for education. Excellent referral source. Prefers Arabic communication. VIP treatment always.',\n    tags: ['VIP Customer', 'High Spender', 'Referral Source', 'Traditional Oud Lover', 'Corporate Buyer'],\n    \n    // Interaction History\n    recentInteractions: [\n      {\n        date: '2024-01-20',\n        type: 'Purchase',\n        details: 'Bought Royal Oud Signature 12ml + Gift Set',\n        value: 1250,\n        channel: 'In-Store',\n        staff: 'Ahmad Hassan'\n      },\n      {\n        date: '2024-01-18',\n        type: 'Inquiry',\n        details: 'Asked about new Cambodian oud arrivals',\n        channel: 'WhatsApp',\n        staff: 'Sara Ahmed'\n      },\n      {\n        date: '2024-01-15',\n        type: 'Service',\n        details: 'Custom blending consultation',\n        channel: 'In-Store',\n        staff: 'Master Perfumer Ahmad'\n      }\n    ],\n    \n    // Analytics & Insights\n    customerInsights: {\n      lifetimeValue: 65000, // Projected\n      churnRisk: 'Low',\n      nextPurchaseProbability: 85,\n      recommendedProducts: ['New Cambodian Supreme', 'Limited Ramadan Edition'],\n      bestContactTime: 'Evening (6-9 PM)',\n      responsiveChannels: ['WhatsApp', 'Phone'],\n      seasonalSpending: {\n        ramadan: 15000,\n        eid: 8000,\n        winter: 12000,\n        summer: 10750\n      }\n    },\n    \n    // Complaints & Feedback\n    feedback: [\n      {\n        date: '2023-12-10',\n        type: 'Compliment',\n        details: 'Excellent service and product quality',\n        rating: 5,\n        staff: 'Ahmad Hassan'\n      },\n      {\n        date: '2023-10-05',\n        type: 'Suggestion',\n        details: 'Suggested carrying more traditional bakhoor varieties',\n        rating: 4,\n        status: 'Implemented'\n      }\n    ]\n  },\n  \n  {\n    id: 'CUST002',\n    customerNumber: 'PRM-002',\n    name: 'Fatima Hassan Al-Zahra',\n    nameArabic: 'فاطمة حسن الزهراء',\n    title: 'Mrs.',\n    email: 'fatima.alzahra@gmail.com',\n    phone: '+971559876543',\n    whatsapp: '+971559876543',\n    nationality: 'Egypt',\n    dateOfBirth: '1990-08-22',\n    gender: 'Female',\n    occupation: 'Interior Designer',\n    company: 'Freelance',\n    \n    addresses: [\n      {\n        type: 'primary',\n        street: 'Apt 1205, Marina Diamond',\n        area: 'Dubai Marina',\n        city: 'Dubai',\n        emirate: 'Dubai',\n        country: 'UAE',\n        postalCode: '00000'\n      }\n    ],\n    \n    customerType: 'Premium',\n    segment: 'Regular',\n    acquisitionChannel: 'Social Media',\n    registrationDate: '2023-02-10',\n    lastVisit: '2024-01-18',\n    status: 'Active',\n    \n    totalSpent: 18500,\n    averageOrderValue: 320,\n    totalOrders: 58,\n    creditLimit: 2000,\n    paymentTerms: 'Cash',\n    preferredPaymentMethod: 'Card',\n    \n    loyaltyTier: 'Gold',\n    loyaltyPoints: 1850,\n    loyaltyPointsValue: 185,\n    cashbackBalance: 370,\n    nextTierRequirement: 25000,\n    \n    preferredCategories: ['Floral Attars', 'Gift Sets', 'Home Fragrances'],\n    favoriteProducts: ['Rose Attar Deluxe', 'Jasmine Collection', 'Bakhoor Mixes'],\n    preferredBrands: ['Floral Gardens', 'Traditional Heritage'],\n    seasonalPreferences: ['Spring Collections', 'Bridal Selections'],\n    \n    shoppingBehavior: {\n      averageVisitDuration: 30,\n      purchaseFrequency: 'Bi-weekly',\n      priceSenitivity: 'Medium',\n      brandLoyalty: 'Medium',\n      occasionBuying: ['Personal Use', 'Gifts', 'Home']\n    },\n    \n    communicationPreferences: {\n      primary: 'Email',\n      email: true,\n      sms: true,\n      phone: false,\n      whatsapp: true,\n      language: 'English',\n      frequency: 'Bi-weekly',\n      topics: ['New Arrivals', 'Promotions', 'Beauty Tips']\n    },\n    \n    specialOccasions: [\n      { type: 'Birthday', date: '08-22', notes: 'Loves floral arrangements' },\n      { type: 'Mother\\'s Day', date: '03-21', notes: 'Buys gifts for family' }\n    ],\n    \n    familyMembers: [\n      { name: 'Omar Hassan', relationship: 'Husband', preferences: ['Light Ouds'] },\n      { name: 'Layla Hassan', relationship: 'Daughter', age: 8, preferences: ['Sweet Scents'] }\n    ],\n    \n    notes: 'Professional interior designer with excellent taste. Appreciates unique and artistic fragrances. Often seeks advice for home fragrance solutions. Good social media influencer.',\n    tags: ['Design Professional', 'Social Media Active', 'Floral Lover', 'Home Fragrance Expert'],\n    \n    recentInteractions: [\n      {\n        date: '2024-01-18',\n        type: 'Purchase',\n        details: 'Rose Attar Collection + Home Bakhoor Set',\n        value: 450,\n        channel: 'Online',\n        staff: 'System'\n      },\n      {\n        date: '2024-01-12',\n        type: 'Inquiry',\n        details: 'Custom home fragrance consultation request',\n        channel: 'Email',\n        staff: 'Sara Ahmed'\n      }\n    ],\n    \n    customerInsights: {\n      lifetimeValue: 35000,\n      churnRisk: 'Medium',\n      nextPurchaseProbability: 70,\n      recommendedProducts: ['New Floral Supreme', 'Designer Home Collection'],\n      bestContactTime: 'Afternoon (2-5 PM)',\n      responsiveChannels: ['Email', 'WhatsApp'],\n      seasonalSpending: {\n        spring: 6000,\n        summer: 4500,\n        winter: 4000,\n        autumn: 4000\n      }\n    },\n    \n    feedback: [\n      {\n        date: '2024-01-10',\n        type: 'Review',\n        details: 'Love the new rose collection!',\n        rating: 5,\n        platform: 'Instagram'\n      }\n    ]\n  },\n  \n  {\n    id: 'CUST003',\n    customerNumber: 'CRP-003',\n    name: 'Emirates Airlines',\n    nameArabic: 'طيران الإمارات',\n    title: 'Corporate',\n    email: 'procurement@emirates.com',\n    phone: '+97142142142',\n    nationality: 'UAE',\n    contactPerson: 'Sarah Al-Mansouri',\n    contactTitle: 'Procurement Manager',\n    \n    addresses: [\n      {\n        type: 'corporate',\n        street: 'Emirates Group Headquarters',\n        area: 'Al Garhoud',\n        city: 'Dubai',\n        emirate: 'Dubai',\n        country: 'UAE',\n        postalCode: '00000'\n      }\n    ],\n    \n    customerType: 'Corporate',\n    segment: 'Enterprise',\n    acquisitionChannel: 'Direct Sales',\n    registrationDate: '2022-01-15',\n    lastVisit: '2024-01-15',\n    status: 'Active',\n    \n    totalSpent: 125000,\n    averageOrderValue: 8500,\n    totalOrders: 15,\n    creditLimit: 50000,\n    paymentTerms: 'Net 45',\n    preferredPaymentMethod: 'Bank Transfer',\n    \n    loyaltyTier: 'Corporate',\n    loyaltyPoints: 12500,\n    loyaltyPointsValue: 1250,\n    cashbackBalance: 2500,\n    \n    preferredCategories: ['Corporate Gifts', 'Premium Oud', 'Gift Sets'],\n    favoriteProducts: ['Executive Gift Collections', 'Luxury Oud Sets', 'Custom Branded Items'],\n    seasonalPreferences: ['Ramadan Corporate Gifts', 'Year-End Appreciation'],\n    \n    corporateInfo: {\n      industry: 'Aviation',\n      employeeCount: 60000,\n      annualRevenue: '25B AED',\n      purchasingBudget: 500000, // Annual fragrance budget\n      decisionMakers: ['Sarah Al-Mansouri', 'Ahmed Al-Rashid', 'Fatima Hassan'],\n      approvalProcess: 'Committee-based',\n      orderFrequency: 'Quarterly',\n      volumeRequirements: 'High'\n    },\n    \n    communicationPreferences: {\n      primary: 'Email',\n      email: true,\n      sms: false,\n      phone: true,\n      whatsapp: false,\n      language: 'English',\n      frequency: 'Monthly',\n      topics: ['Corporate Offers', 'Volume Discounts', 'New Collections']\n    },\n    \n    specialOccasions: [\n      { type: 'Ramadan Gifts', date: 'Ramadan', notes: 'Large volume orders for staff' },\n      { type: 'Company Anniversary', date: '05-25', notes: 'Executive gifts' },\n      { type: 'National Day', date: '12-02', notes: 'VIP client gifts' }\n    ],\n    \n    notes: 'Major corporate client with high-volume requirements. Focus on premium quality and consistent supply. Requires custom packaging and corporate branding options.',\n    tags: ['Major Corporate', 'High Volume', 'Premium Quality', 'Custom Requirements'],\n    \n    recentInteractions: [\n      {\n        date: '2024-01-15',\n        type: 'Order',\n        details: 'Q1 Corporate Gift Order - 500 units',\n        value: 25000,\n        channel: 'Direct Sales',\n        staff: 'Sales Director'\n      },\n      {\n        date: '2024-01-10',\n        type: 'Meeting',\n        details: 'Annual contract renewal discussion',\n        channel: 'In-Person',\n        staff: 'Sales Team'\n      }\n    ],\n    \n    customerInsights: {\n      lifetimeValue: 500000,\n      churnRisk: 'Very Low',\n      nextPurchaseProbability: 95,\n      recommendedProducts: ['Executive Platinum Collection', 'Custom Corporate Sets'],\n      bestContactTime: 'Business Hours (9 AM - 5 PM)',\n      responsiveChannels: ['Email', 'Phone'],\n      seasonalSpending: {\n        q1: 40000,\n        q2: 30000,\n        q3: 25000,\n        q4: 30000\n      }\n    }\n  }\n];\n\n// Customer segmentation criteria\nconst customerSegments = {\n  vip: {\n    name: 'VIP Customers',\n    criteria: { minSpent: 30000, minOrders: 25 },\n    benefits: ['Priority Service', '20% Discount', 'Exclusive Access', 'Personal Shopper'],\n    color: 'purple'\n  },\n  premium: {\n    name: 'Premium Customers',\n    criteria: { minSpent: 10000, minOrders: 15 },\n    benefits: ['10% Discount', 'Early Access', 'Birthday Gifts', 'Free Shipping'],\n    color: 'amber'\n  },\n  regular: {\n    name: 'Regular Customers',\n    criteria: { minSpent: 2000, minOrders: 5 },\n    benefits: ['5% Discount', 'Loyalty Points', 'Newsletter', 'Member Prices'],\n    color: 'blue'\n  },\n  corporate: {\n    name: 'Corporate Clients',\n    criteria: { type: 'Corporate' },\n    benefits: ['Volume Discounts', 'Credit Terms', 'Custom Packaging', 'Dedicated Support'],\n    color: 'green'\n  }\n};\n\n// Marketing campaigns\nconst marketingCampaigns = [\n  {\n    id: 'CAMP001',\n    name: 'Ramadan Luxury Collection',\n    nameArabic: 'مجموعة رمضان الفاخرة',\n    status: 'active',\n    startDate: '2024-02-01',\n    endDate: '2024-04-15',\n    targetSegments: ['VIP', 'Premium'],\n    channels: ['Email', 'WhatsApp', 'SMS'],\n    budget: 25000,\n    sent: 1250,\n    opened: 875,\n    clicked: 156,\n    converted: 89,\n    revenue: 47500\n  },\n  {\n    id: 'CAMP002',\n    name: 'New Customer Welcome Series',\n    nameArabic: 'سلسلة ترحيب العملاء الجدد',\n    status: 'active',\n    startDate: '2024-01-01',\n    endDate: '2024-12-31',\n    targetSegments: ['New Customers'],\n    channels: ['Email', 'WhatsApp'],\n    budget: 15000,\n    sent: 450,\n    opened: 315,\n    clicked: 95,\n    converted: 67,\n    revenue: 18900\n  }\n];\n\nexport default function ComprehensiveCRMPage() {\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedCustomer, setSelectedCustomer] = useState<any>(null);\n  const [isNewCustomerDialogOpen, setIsNewCustomerDialogOpen] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [segmentFilter, setSegmentFilter] = useState('all');\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [selectedDate, setSelectedDate] = useState<Date | undefined>(new Date());\n\n  // Calculate CRM statistics\n  const calculateCRMStats = () => {\n    const totalCustomers = customersDatabase.length;\n    const activeCustomers = customersDatabase.filter(c => c.status === 'Active').length;\n    const vipCustomers = customersDatabase.filter(c => c.customerType === 'VIP').length;\n    const corporateCustomers = customersDatabase.filter(c => c.customerType === 'Corporate').length;\n    \n    const totalRevenue = customersDatabase.reduce((sum, customer) => sum + customer.totalSpent, 0);\n    const avgOrderValue = customersDatabase.reduce((sum, customer) => sum + customer.averageOrderValue, 0) / totalCustomers;\n    const totalLoyaltyPoints = customersDatabase.reduce((sum, customer) => sum + customer.loyaltyPoints, 0);\n    const totalCashback = customersDatabase.reduce((sum, customer) => sum + customer.cashbackBalance, 0);\n    \n    return {\n      totalCustomers,\n      activeCustomers,\n      vipCustomers,\n      corporateCustomers,\n      totalRevenue,\n      avgOrderValue,\n      totalLoyaltyPoints,\n      totalCashback\n    };\n  };\n\n  const stats = calculateCRMStats();\n\n  // Filter customers based on search and filters\n  const getFilteredCustomers = () => {\n    return customersDatabase.filter(customer => {\n      const matchesSearch = searchTerm === '' ||\n        customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        customer.nameArabic.includes(searchTerm) ||\n        customer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        customer.phone.includes(searchTerm) ||\n        customer.customerNumber.toLowerCase().includes(searchTerm.toLowerCase());\n        \n      const matchesSegment = segmentFilter === 'all' || customer.customerType.toLowerCase() === segmentFilter;\n      const matchesStatus = statusFilter === 'all' || customer.status.toLowerCase() === statusFilter;\n      \n      return matchesSearch && matchesSegment && matchesStatus;\n    });\n  };\n\n  // Get segment color\n  const getSegmentColor = (type: string) => {\n    switch (type.toLowerCase()) {\n      case 'vip': return 'bg-purple-100 text-purple-800';\n      case 'premium': return 'bg-amber-100 text-amber-800';\n      case 'corporate': return 'bg-green-100 text-green-800';\n      default: return 'bg-blue-100 text-blue-800';\n    }\n  };\n\n  // Render customer card\n  const renderCustomerCard = (customer: any) => (\n    <Card key={customer.id} className=\"hover:shadow-lg transition-shadow cursor-pointer\" onClick={() => setSelectedCustomer(customer)}>\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between mb-3\">\n          <div className=\"flex items-center space-x-3\">\n            <Avatar className=\"h-12 w-12\">\n              <AvatarFallback className={`${getSegmentColor(customer.customerType)} font-semibold`}>\n                {customer.name.split(' ').map((n: string) => n[0]).join('').slice(0, 2)}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2 mb-1\">\n                <h3 className=\"font-medium text-sm\">{customer.name}</h3>\n                {customer.customerType === 'VIP' && <Crown className=\"h-4 w-4 text-purple-600\" />}\n                {customer.customerType === 'Corporate' && <Building className=\"h-4 w-4 text-green-600\" />}\n              </div>\n              <p className=\"text-xs text-gray-600 mb-1\">{customer.nameArabic}</p>\n              <p className=\"text-xs text-gray-500\">{customer.customerNumber}</p>\n            </div>\n          </div>\n          <div className=\"text-right\">\n            <Badge className={getSegmentColor(customer.customerType)} variant=\"secondary\">\n              {customer.customerType}\n            </Badge>\n            <p className=\"text-xs text-gray-500 mt-1\">{customer.loyaltyTier}</p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-4 text-xs\">\n          <div>\n            <span className=\"text-gray-600\">Total Spent:</span>\n            <p className=\"font-medium text-green-600\">AED {customer.totalSpent.toLocaleString()}</p>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Orders:</span>\n            <p className=\"font-medium\">{customer.totalOrders}</p>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Avg Order:</span>\n            <p className=\"font-medium\">AED {customer.averageOrderValue}</p>\n          </div>\n          <div>\n            <span className=\"text-gray-600\">Loyalty Points:</span>\n            <p className=\"font-medium text-amber-600\">{customer.loyaltyPoints} pts</p>\n          </div>\n        </div>\n\n        <div className=\"flex justify-between items-center mt-3 pt-3 border-t\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"flex space-x-1\">\n              {customer.communicationPreferences.email && <Mail className=\"h-3 w-3 text-gray-400\" />}\n              {customer.communicationPreferences.whatsapp && <MessageSquare className=\"h-3 w-3 text-green-500\" />}\n              {customer.communicationPreferences.phone && <Phone className=\"h-3 w-3 text-blue-500\" />}\n            </div>\n            <span className=\"text-xs text-gray-500\">Last visit: {customer.lastVisit}</span>\n          </div>\n          <div className=\"flex space-x-1\">\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n              <Eye className=\"h-3 w-3\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n              <Edit className=\"h-3 w-3\" />\n            </Button>\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-6 w-6 p-0\">\n              <MessageSquare className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white border-b px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center\">\n              <Users className=\"h-6 w-6 mr-2 text-purple-600\" />\n              Customer Relationship Management\n            </h1>\n            <Badge className=\"bg-purple-100 text-purple-800\">\n              <Activity className=\"h-3 w-3 mr-1\" />\n              {stats.activeCustomers} Active Customers\n            </Badge>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button variant=\"outline\" size=\"sm\">\n              <Download className=\"h-4 w-4 mr-1\" />\n              Export\n            </Button>\n            <Button variant=\"outline\" size=\"sm\">\n              <BarChart3 className=\"h-4 w-4 mr-1\" />\n              Analytics\n            </Button>\n            <Dialog open={isNewCustomerDialogOpen} onOpenChange={setIsNewCustomerDialogOpen}>\n              <DialogTrigger asChild>\n                <Button size=\"sm\" className=\"bg-purple-600 hover:bg-purple-700\">\n                  <Plus className=\"h-4 w-4 mr-1\" />\n                  Add Customer\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"max-w-2xl\">\n                <DialogHeader>\n                  <DialogTitle>Add New Customer</DialogTitle>\n                  <DialogDescription>\n                    Create a comprehensive customer profile with preferences and history\n                  </DialogDescription>\n                </DialogHeader>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label>Full Name *</Label>\n                      <Input placeholder=\"Customer full name\" />\n                    </div>\n                    <div>\n                      <Label>Arabic Name</Label>\n                      <Input placeholder=\"الاسم بالعربية\" />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <Label>Email</Label>\n                      <Input type=\"email\" placeholder=\"customer@email.com\" />\n                    </div>\n                    <div>\n                      <Label>Phone *</Label>\n                      <Input placeholder=\"+971 50 xxx xxxx\" />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-3 gap-4\">\n                    <div>\n                      <Label>Customer Type</Label>\n                      <Select>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select type\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"regular\">Regular</SelectItem>\n                          <SelectItem value=\"premium\">Premium</SelectItem>\n                          <SelectItem value=\"vip\">VIP</SelectItem>\n                          <SelectItem value=\"corporate\">Corporate</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div>\n                      <Label>Nationality</Label>\n                      <Select>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select nationality\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"uae\">UAE</SelectItem>\n                          <SelectItem value=\"saudi\">Saudi Arabia</SelectItem>\n                          <SelectItem value=\"egypt\">Egypt</SelectItem>\n                          <SelectItem value=\"india\">India</SelectItem>\n                          <SelectItem value=\"other\">Other</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    <div>\n                      <Label>Preferred Language</Label>\n                      <Select>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Language\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"arabic\">Arabic</SelectItem>\n                          <SelectItem value=\"english\">English</SelectItem>\n                          <SelectItem value=\"both\">Both</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                  </div>\n                  <div>\n                    <Label>Address</Label>\n                    <Textarea placeholder=\"Customer address...\" />\n                  </div>\n                  <div>\n                    <Label>Notes</Label>\n                    <Textarea placeholder=\"Customer preferences, notes, special requirements...\" />\n                  </div>\n                  <div className=\"flex justify-end space-x-2\">\n                    <Button variant=\"outline\" onClick={() => setIsNewCustomerDialogOpen(false)}>\n                      Cancel\n                    </Button>\n                    <Button onClick={() => setIsNewCustomerDialogOpen(false)}>\n                      Create Customer\n                    </Button>\n                  </div>\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"p-6\">\n        {/* Statistics Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Total Customers</p>\n                  <p className=\"text-2xl font-bold text-purple-600\">{stats.totalCustomers}</p>\n                  <p className=\"text-xs text-gray-500\">{stats.vipCustomers} VIP, {stats.corporateCustomers} Corporate</p>\n                </div>\n                <Users className=\"h-8 w-8 text-purple-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Total Revenue</p>\n                  <p className=\"text-2xl font-bold text-green-600\">AED {stats.totalRevenue.toLocaleString()}</p>\n                  <p className=\"text-xs text-gray-500\">from customer purchases</p>\n                </div>\n                <DollarSign className=\"h-8 w-8 text-green-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Avg Order Value</p>\n                  <p className=\"text-2xl font-bold text-amber-600\">AED {stats.avgOrderValue.toFixed(0)}</p>\n                  <p className=\"text-xs text-gray-500\">across all customers</p>\n                </div>\n                <ShoppingCart className=\"h-8 w-8 text-amber-600\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-sm text-gray-600\">Loyalty Points</p>\n                  <p className=\"text-2xl font-bold text-blue-600\">{stats.totalLoyaltyPoints.toLocaleString()}</p>\n                  <p className=\"text-xs text-gray-500\">AED {stats.totalCashback.toFixed(0)} cashback</p>\n                </div>\n                <Star className=\"h-8 w-8 text-blue-600\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Filters and Search */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"p-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                <Input\n                  placeholder=\"Search customers...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"pl-10\"\n                />\n              </div>\n              <Select value={segmentFilter} onValueChange={setSegmentFilter}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"All Segments\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Segments</SelectItem>\n                  <SelectItem value=\"vip\">VIP Customers</SelectItem>\n                  <SelectItem value=\"premium\">Premium Customers</SelectItem>\n                  <SelectItem value=\"regular\">Regular Customers</SelectItem>\n                  <SelectItem value=\"corporate\">Corporate Clients</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={statusFilter} onValueChange={setStatusFilter}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"All Status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Status</SelectItem>\n                  <SelectItem value=\"active\">Active</SelectItem>\n                  <SelectItem value=\"inactive\">Inactive</SelectItem>\n                  <SelectItem value=\"prospect\">Prospect</SelectItem>\n                </SelectContent>\n              </Select>\n              <Button variant=\"outline\" className=\"flex items-center\">\n                <Filter className=\"h-4 w-4 mr-2\" />\n                Advanced Filters\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* CRM Tabs */}\n        <Tabs value={activeTab} onValueChange={setActiveTab}>\n          <TabsList className=\"grid w-full grid-cols-5\">\n            <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n            <TabsTrigger value=\"customers\">Customers ({customersDatabase.length})</TabsTrigger>\n            <TabsTrigger value=\"segments\">Segments</TabsTrigger>\n            <TabsTrigger value=\"campaigns\">Campaigns</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\" className=\"mt-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"h-5 w-5 mr-2\" />\n                    Customer Growth Trends\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">New Customers This Month</span>\n                      <span className=\"font-semibold text-green-600\">+23</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Customer Retention Rate</span>\n                      <span className=\"font-semibold text-blue-600\">94%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Churn Risk Customers</span>\n                      <span className=\"font-semibold text-orange-600\">5</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Avg Customer Lifetime</span>\n                      <span className=\"font-semibold\">2.5 years</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <PieChart className=\"h-5 w-5 mr-2\" />\n                    Customer Distribution\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {Object.entries(customerSegments).map(([key, segment]) => {\n                      const count = customersDatabase.filter(c => c.customerType.toLowerCase() === key).length;\n                      const percentage = (count / customersDatabase.length * 100).toFixed(1);\n                      return (\n                        <div key={key} className=\"flex justify-between items-center\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`w-3 h-3 rounded-full bg-${segment.color}-500`}></div>\n                            <span className=\"text-sm\">{segment.name}</span>\n                          </div>\n                          <div className=\"text-right\">\n                            <span className=\"font-semibold\">{count}</span>\n                            <span className=\"text-xs text-gray-500 ml-1\">({percentage}%)</span>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <CalendarIcon className=\"h-5 w-5 mr-2\" />\n                    Upcoming Events & Occasions\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {customersDatabase.flatMap(customer => \n                      customer.specialOccasions?.map(occasion => ({\n                        ...occasion,\n                        customerName: customer.name,\n                        customerId: customer.id\n                      })) || []\n                    ).slice(0, 5).map((occasion, index) => (\n                      <div key={index} className=\"flex justify-between items-center p-2 bg-gray-50 rounded\">\n                        <div>\n                          <h4 className=\"font-medium text-sm\">{occasion.type}</h4>\n                          <p className=\"text-xs text-gray-600\">{occasion.customerName}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"text-xs font-medium\">{occasion.date}</span>\n                          <p className=\"text-xs text-gray-500\">{occasion.notes}</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Award className=\"h-5 w-5 mr-2\" />\n                    Loyalty Program Performance\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Total Points Issued</span>\n                      <span className=\"font-semibold text-amber-600\">{stats.totalLoyaltyPoints.toLocaleString()}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Points Redeemed</span>\n                      <span className=\"font-semibold\">15,750</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Cashback Given</span>\n                      <span className=\"font-semibold text-green-600\">AED {stats.totalCashback.toFixed(0)}</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Program Participation</span>\n                      <span className=\"font-semibold\">87%</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"customers\" className=\"mt-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {getFilteredCustomers().map(renderCustomerCard)}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"segments\" className=\"mt-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {Object.entries(customerSegments).map(([key, segment]) => {\n                const customers = customersDatabase.filter(c => c.customerType.toLowerCase() === key);\n                const totalRevenue = customers.reduce((sum, c) => sum + c.totalSpent, 0);\n                const avgSpend = customers.length > 0 ? totalRevenue / customers.length : 0;\n\n                return (\n                  <Card key={key}>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center justify-between\">\n                        <span>{segment.name}</span>\n                        <Badge className={`bg-${segment.color}-100 text-${segment.color}-800`} variant=\"secondary\">\n                          {customers.length} customers\n                        </Badge>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Total Revenue:</span>\n                          <span className=\"font-semibold text-green-600\">AED {totalRevenue.toLocaleString()}</span>\n                        </div>\n                        <div className=\"flex justify-between\">\n                          <span className=\"text-sm text-gray-600\">Avg Spend per Customer:</span>\n                          <span className=\"font-semibold\">AED {avgSpend.toFixed(0)}</span>\n                        </div>\n                        <Separator />\n                        <div>\n                          <p className=\"text-sm font-medium mb-2\">Benefits:</p>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {segment.benefits.map((benefit, index) => (\n                              <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                                {benefit}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                );\n              })}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"campaigns\" className=\"mt-6\">\n            <div className=\"space-y-6\">\n              <div className=\"flex justify-between items-center\">\n                <h3 className=\"text-lg font-semibold\">Marketing Campaigns</h3>\n                <Button>\n                  <Plus className=\"h-4 w-4 mr-1\" />\n                  New Campaign\n                </Button>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {marketingCampaigns.map(campaign => {\n                  const conversionRate = (campaign.converted / campaign.sent * 100).toFixed(1);\n                  const roi = ((campaign.revenue - campaign.budget) / campaign.budget * 100).toFixed(1);\n                  \n                  return (\n                    <Card key={campaign.id}>\n                      <CardHeader>\n                        <div className=\"flex items-center justify-between\">\n                          <CardTitle className=\"text-lg\">{campaign.name}</CardTitle>\n                          <Badge className={campaign.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'} variant=\"secondary\">\n                            {campaign.status}\n                          </Badge>\n                        </div>\n                        <CardDescription>{campaign.nameArabic}</CardDescription>\n                      </CardHeader>\n                      <CardContent>\n                        <div className=\"space-y-3\">\n                          <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                            <div>\n                              <span className=\"text-gray-600\">Budget:</span>\n                              <p className=\"font-medium\">AED {campaign.budget.toLocaleString()}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-600\">Revenue:</span>\n                              <p className=\"font-medium text-green-600\">AED {campaign.revenue.toLocaleString()}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-600\">Sent:</span>\n                              <p className=\"font-medium\">{campaign.sent}</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-600\">Opened:</span>\n                              <p className=\"font-medium\">{campaign.opened} ({(campaign.opened/campaign.sent*100).toFixed(1)}%)</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-600\">Clicked:</span>\n                              <p className=\"font-medium\">{campaign.clicked} ({(campaign.clicked/campaign.opened*100).toFixed(1)}%)</p>\n                            </div>\n                            <div>\n                              <span className=\"text-gray-600\">Converted:</span>\n                              <p className=\"font-medium text-amber-600\">{campaign.converted} ({conversionRate}%)</p>\n                            </div>\n                          </div>\n                          <Separator />\n                          <div className=\"flex justify-between items-center\">\n                            <span className=\"text-sm text-gray-600\">ROI:</span>\n                            <span className={`font-bold ${parseFloat(roi) > 0 ? 'text-green-600' : 'text-red-600'}`}>\n                              {roi}%\n                            </span>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  );\n                })}\n              </div>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"mt-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle>Customer Lifetime Value Analysis</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    {customersDatabase.slice(0, 5).map((customer, index) => (\n                      <div key={customer.id} className=\"flex justify-between items-center\">\n                        <div>\n                          <h4 className=\"font-medium text-sm\">{customer.name}</h4>\n                          <p className=\"text-xs text-gray-600\">{customer.customerType}</p>\n                        </div>\n                        <div className=\"text-right\">\n                          <span className=\"font-bold text-green-600\">\n                            AED {customer.customerInsights?.lifetimeValue?.toLocaleString() || 'N/A'}\n                          </span>\n                          <p className=\"text-xs text-gray-500\">Projected CLV</p>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Purchase Behavior Insights</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Peak Shopping Time:</span>\n                      <span className=\"font-medium\">6-9 PM</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Most Popular Category:</span>\n                      <span className=\"font-medium\">Premium Oud</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Avg Visit Duration:</span>\n                      <span className=\"font-medium\">42 minutes</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Repeat Purchase Rate:</span>\n                      <span className=\"font-medium text-green-600\">78%</span>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <span className=\"text-sm\">Referral Rate:</span>\n                      <span className=\"font-medium text-blue-600\">23%</span>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Geographic Distribution</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {['Dubai', 'Abu Dhabi', 'Sharjah', 'Ajman', 'Other Emirates'].map((location, index) => {\n                      const percentage = [45, 25, 15, 8, 7][index];\n                      return (\n                        <div key={location} className=\"flex justify-between items-center\">\n                          <span className=\"text-sm\">{location}</span>\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-16 bg-gray-200 rounded-full h-2\">\n                              <div \n                                className=\"bg-purple-600 h-2 rounded-full\" \n                                style={{ width: `${percentage}%` }}\n                              ></div>\n                            </div>\n                            <span className=\"text-sm font-medium\">{percentage}%</span>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle>Communication Effectiveness</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"space-y-3\">\n                    {[\n                      { channel: 'WhatsApp', rate: 92, color: 'green' },\n                      { channel: 'Email', rate: 68, color: 'blue' },\n                      { channel: 'SMS', rate: 45, color: 'yellow' },\n                      { channel: 'Phone', rate: 78, color: 'purple' }\n                    ].map((item) => (\n                      <div key={item.channel} className=\"flex justify-between items-center\">\n                        <span className=\"text-sm\">{item.channel}</span>\n                        <div className=\"flex items-center space-x-2\">\n                          <Progress value={item.rate} className=\"w-16\" />\n                          <span className=\"text-sm font-medium\">{item.rate}%</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n\n      {/* Customer Detail Dialog */}\n      {selectedCustomer && (\n        <Dialog open={!!selectedCustomer} onOpenChange={() => setSelectedCustomer(null)}>\n          <DialogContent className=\"max-w-6xl max-h-[90vh] overflow-y-auto\">\n            <DialogHeader>\n              <DialogTitle className=\"flex items-center\">\n                <Users className=\"h-5 w-5 mr-2\" />\n                {selectedCustomer.name} - {selectedCustomer.customerNumber}\n              </DialogTitle>\n              <DialogDescription>\n                {selectedCustomer.nameArabic} • {selectedCustomer.customerType} Customer\n              </DialogDescription>\n            </DialogHeader>\n\n            <Tabs defaultValue=\"profile\" className=\"w-full\">\n              <TabsList className=\"grid w-full grid-cols-6\">\n                <TabsTrigger value=\"profile\">Profile</TabsTrigger>\n                <TabsTrigger value=\"purchases\">Purchase History</TabsTrigger>\n                <TabsTrigger value=\"preferences\">Preferences</TabsTrigger>\n                <TabsTrigger value=\"loyalty\">Loyalty</TabsTrigger>\n                <TabsTrigger value=\"communications\">Communications</TabsTrigger>\n                <TabsTrigger value=\"insights\">Insights</TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"profile\" className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Personal Information</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Full Name:</span>\n                        <span className=\"font-medium\">{selectedCustomer.name}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Arabic Name:</span>\n                        <span className=\"font-medium\">{selectedCustomer.nameArabic}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Email:</span>\n                        <span className=\"font-medium\">{selectedCustomer.email}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Phone:</span>\n                        <span className=\"font-medium\">{selectedCustomer.phone}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Nationality:</span>\n                        <span className=\"font-medium\">{selectedCustomer.nationality}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Date of Birth:</span>\n                        <span className=\"font-medium\">{selectedCustomer.dateOfBirth}</span>\n                      </div>\n                      {selectedCustomer.occupation && (\n                        <div className=\"flex justify-between\">\n                          <span>Occupation:</span>\n                          <span className=\"font-medium\">{selectedCustomer.occupation}</span>\n                        </div>\n                      )}\n                      {selectedCustomer.company && (\n                        <div className=\"flex justify-between\">\n                          <span>Company:</span>\n                          <span className=\"font-medium\">{selectedCustomer.company}</span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Customer Status</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex justify-between\">\n                        <span>Customer Type:</span>\n                        <Badge className={getSegmentColor(selectedCustomer.customerType)} variant=\"secondary\">\n                          {selectedCustomer.customerType}\n                        </Badge>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Registration Date:</span>\n                        <span className=\"font-medium\">{selectedCustomer.registrationDate}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Last Visit:</span>\n                        <span className=\"font-medium\">{selectedCustomer.lastVisit}</span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Status:</span>\n                        <Badge className=\"bg-green-100 text-green-800\" variant=\"secondary\">\n                          {selectedCustomer.status}\n                        </Badge>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span>Acquisition Channel:</span>\n                        <span className=\"font-medium\">{selectedCustomer.acquisitionChannel}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {selectedCustomer.addresses && (\n                  <div className=\"mt-6\">\n                    <h4 className=\"font-semibold mb-3\">Addresses</h4>\n                    <div className=\"space-y-3\">\n                      {selectedCustomer.addresses.map((address: any, index: number) => (\n                        <div key={index} className=\"p-3 bg-gray-50 rounded\">\n                          <div className=\"flex justify-between items-start\">\n                            <div>\n                              <Badge variant=\"outline\" className=\"mb-2\">{address.type}</Badge>\n                              <p className=\"text-sm\">{address.street}</p>\n                              <p className=\"text-sm text-gray-600\">{address.area}, {address.city}, {address.emirate}</p>\n                            </div>\n                            <MapPin className=\"h-4 w-4 text-gray-400\" />\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"purchases\" className=\"mt-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                    <div className=\"text-center p-3 bg-green-50 rounded\">\n                      <p className=\"text-2xl font-bold text-green-600\">{selectedCustomer.totalOrders}</p>\n                      <p className=\"text-sm text-gray-600\">Total Orders</p>\n                    </div>\n                    <div className=\"text-center p-3 bg-blue-50 rounded\">\n                      <p className=\"text-2xl font-bold text-blue-600\">AED {selectedCustomer.totalSpent.toLocaleString()}</p>\n                      <p className=\"text-sm text-gray-600\">Total Spent</p>\n                    </div>\n                    <div className=\"text-center p-3 bg-amber-50 rounded\">\n                      <p className=\"text-2xl font-bold text-amber-600\">AED {selectedCustomer.averageOrderValue}</p>\n                      <p className=\"text-sm text-gray-600\">Avg Order Value</p>\n                    </div>\n                    <div className=\"text-center p-3 bg-purple-50 rounded\">\n                      <p className=\"text-2xl font-bold text-purple-600\">{selectedCustomer.customerInsights?.lifetimeValue ? `AED ${selectedCustomer.customerInsights.lifetimeValue.toLocaleString()}` : 'N/A'}</p>\n                      <p className=\"text-sm text-gray-600\">Lifetime Value</p>\n                    </div>\n                  </div>\n\n                  {selectedCustomer.recentInteractions && (\n                    <div>\n                      <h4 className=\"font-semibold mb-3\">Recent Interactions</h4>\n                      <div className=\"space-y-2\">\n                        {selectedCustomer.recentInteractions.map((interaction: any, index: number) => (\n                          <div key={index} className=\"flex justify-between items-center p-3 border rounded\">\n                            <div>\n                              <h5 className=\"font-medium text-sm\">{interaction.type}</h5>\n                              <p className=\"text-sm text-gray-600\">{interaction.details}</p>\n                              <p className=\"text-xs text-gray-500\">{interaction.channel} • {interaction.staff}</p>\n                            </div>\n                            <div className=\"text-right\">\n                              <p className=\"text-sm font-medium\">{interaction.date}</p>\n                              {interaction.value && (\n                                <p className=\"text-sm text-green-600\">AED {interaction.value}</p>\n                              )}\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"preferences\" className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Product Preferences</h4>\n                    <div className=\"space-y-3\">\n                      <div>\n                        <Label className=\"text-sm font-medium\">Preferred Categories</Label>\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\n                          {selectedCustomer.preferredCategories?.map((category: string, index: number) => (\n                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                              {category}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                      <div>\n                        <Label className=\"text-sm font-medium\">Favorite Products</Label>\n                        <div className=\"flex flex-wrap gap-1 mt-1\">\n                          {selectedCustomer.favoriteProducts?.map((product: string, index: number) => (\n                            <Badge key={index} variant=\"secondary\" className=\"text-xs\">\n                              {product}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Shopping Behavior</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      {selectedCustomer.shoppingBehavior && Object.entries(selectedCustomer.shoppingBehavior).map(([key, value]) => (\n                        <div key={key} className=\"flex justify-between\">\n                          <span className=\"capitalize\">{key.replace(/([A-Z])/g, ' $1')}:</span>\n                          <span className=\"font-medium\">{Array.isArray(value) ? value.join(', ') : value}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n\n                {selectedCustomer.specialOccasions && (\n                  <div className=\"mt-6\">\n                    <h4 className=\"font-semibold mb-3\">Special Occasions</h4>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                      {selectedCustomer.specialOccasions.map((occasion: any, index: number) => (\n                        <div key={index} className=\"p-3 border rounded\">\n                          <div className=\"flex items-center space-x-2 mb-1\">\n                            <Cake className=\"h-4 w-4 text-amber-500\" />\n                            <h5 className=\"font-medium text-sm\">{occasion.type}</h5>\n                          </div>\n                          <p className=\"text-sm text-gray-600\">Date: {occasion.date}</p>\n                          <p className=\"text-xs text-gray-500\">{occasion.notes}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </TabsContent>\n\n              <TabsContent value=\"loyalty\" className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Loyalty Status</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"text-center p-4 bg-amber-50 rounded\">\n                        <Crown className=\"h-8 w-8 text-amber-600 mx-auto mb-2\" />\n                        <h3 className=\"font-bold text-lg text-amber-600\">{selectedCustomer.loyaltyTier}</h3>\n                        <p className=\"text-sm text-gray-600\">Current Tier</p>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 gap-4\">\n                        <div className=\"text-center p-3 border rounded\">\n                          <p className=\"text-xl font-bold text-blue-600\">{selectedCustomer.loyaltyPoints}</p>\n                          <p className=\"text-xs text-gray-600\">Points</p>\n                        </div>\n                        <div className=\"text-center p-3 border rounded\">\n                          <p className=\"text-xl font-bold text-green-600\">AED {selectedCustomer.cashbackBalance}</p>\n                          <p className=\"text-xs text-gray-600\">Cashback</p>\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <div className=\"flex justify-between text-sm mb-1\">\n                          <span>Progress to next tier:</span>\n                          <span>{((selectedCustomer.totalSpent / selectedCustomer.nextTierRequirement) * 100).toFixed(1)}%</span>\n                        </div>\n                        <Progress value={(selectedCustomer.totalSpent / selectedCustomer.nextTierRequirement) * 100} />\n                        <p className=\"text-xs text-gray-500 mt-1\">\n                          Spend AED {(selectedCustomer.nextTierRequirement - selectedCustomer.totalSpent).toLocaleString()} more to reach next tier\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Rewards & Benefits</h4>\n                    <div className=\"space-y-2\">\n                      {customerSegments[selectedCustomer.customerType.toLowerCase()]?.benefits.map((benefit: string, index: number) => (\n                        <div key={index} className=\"flex items-center space-x-2 p-2 bg-green-50 rounded\">\n                          <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                          <span className=\"text-sm\">{benefit}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"communications\" className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Communication Preferences</h4>\n                    <div className=\"space-y-3\">\n                      <div className=\"p-3 border rounded\">\n                        <h5 className=\"font-medium text-sm mb-2\">Preferred Channels</h5>\n                        <div className=\"space-y-2\">\n                          {selectedCustomer.communicationPreferences && Object.entries(selectedCustomer.communicationPreferences).map(([key, value]) => {\n                            if (typeof value === 'boolean' && value) {\n                              return (\n                                <div key={key} className=\"flex items-center space-x-2\">\n                                  <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                                  <span className=\"text-sm capitalize\">{key}</span>\n                                </div>\n                              );\n                            }\n                            return null;\n                          })}\n                        </div>\n                      </div>\n                      \n                      <div className=\"p-3 border rounded\">\n                        <div className=\"flex justify-between items-center mb-2\">\n                          <span className=\"text-sm\">Language:</span>\n                          <Badge variant=\"outline\">{selectedCustomer.communicationPreferences?.language}</Badge>\n                        </div>\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm\">Frequency:</span>\n                          <Badge variant=\"outline\">{selectedCustomer.communicationPreferences?.frequency}</Badge>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Communication History</h4>\n                    <div className=\"space-y-2\">\n                      {/* Mock communication history */}\n                      <div className=\"p-2 border rounded\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium\">Welcome Email</span>\n                          <span className=\"text-xs text-gray-500\">2024-01-15</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600\">Registration welcome message sent</p>\n                      </div>\n                      <div className=\"p-2 border rounded\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium\">Promotion WhatsApp</span>\n                          <span className=\"text-xs text-gray-500\">2024-01-10</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600\">Ramadan special offers</p>\n                      </div>\n                      <div className=\"p-2 border rounded\">\n                        <div className=\"flex justify-between items-center\">\n                          <span className=\"text-sm font-medium\">Birthday Greeting</span>\n                          <span className=\"text-xs text-gray-500\">2024-03-15</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600\">Birthday wishes with special discount</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"insights\" className=\"mt-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Customer Insights</h4>\n                    <div className=\"space-y-3\">\n                      {selectedCustomer.customerInsights && Object.entries(selectedCustomer.customerInsights).map(([key, value]) => {\n                        if (typeof value === 'object') return null;\n                        return (\n                          <div key={key} className=\"flex justify-between items-center\">\n                            <span className=\"text-sm capitalize\">{key.replace(/([A-Z])/g, ' $1')}:</span>\n                            <span className=\"font-medium\">\n                              {typeof value === 'number' && key.includes('value') ? `AED ${value.toLocaleString()}` :\n                               typeof value === 'number' && key.includes('probability') ? `${value}%` :\n                               value}\n                            </span>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  </div>\n\n                  <div>\n                    <h4 className=\"font-semibold mb-3\">Recommended Actions</h4>\n                    <div className=\"space-y-2\">\n                      <div className=\"p-2 bg-blue-50 rounded\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Target className=\"h-4 w-4 text-blue-600\" />\n                          <span className=\"text-sm font-medium\">Send Product Recommendations</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600 ml-6\">Based on purchase history</p>\n                      </div>\n                      <div className=\"p-2 bg-green-50 rounded\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Gift className=\"h-4 w-4 text-green-600\" />\n                          <span className=\"text-sm font-medium\">Birthday Campaign</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600 ml-6\">Special birthday offer due</p>\n                      </div>\n                      <div className=\"p-2 bg-amber-50 rounded\">\n                        <div className=\"flex items-center space-x-2\">\n                          <Star className=\"h-4 w-4 text-amber-600\" />\n                          <span className=\"text-sm font-medium\">VIP Service</span>\n                        </div>\n                        <p className=\"text-xs text-gray-600 ml-6\">Provide premium service experience</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {selectedCustomer.tags && (\n                  <div className=\"mt-6\">\n                    <h4 className=\"font-semibold mb-3\">Customer Tags</h4>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {selectedCustomer.tags.map((tag: string, index: number) => (\n                        <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                          <Flag className=\"h-3 w-3 mr-1\" />\n                          {tag}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {selectedCustomer.notes && (\n                  <div className=\"mt-6\">\n                    <h4 className=\"font-semibold mb-3\">Notes</h4>\n                    <div className=\"p-3 bg-gray-50 rounded\">\n                      <p className=\"text-sm text-gray-700\">{selectedCustomer.notes}</p>\n                    </div>\n                  </div>\n                )}\n              </TabsContent>\n            </Tabs>\n\n            <div className=\"flex justify-end space-x-2 mt-6\">\n              <Button variant=\"outline\" onClick={() => setSelectedCustomer(null)}>\n                Close\n              </Button>\n              <Button variant=\"outline\">\n                <Edit className=\"h-4 w-4 mr-1\" />\n                Edit Customer\n              </Button>\n              <Button>\n                <MessageSquare className=\"h-4 w-4 mr-1\" />\n                Send Message\n              </Button>\n            </div>\n          </DialogContent>\n        </Dialog>\n      )}\n    </div>\n  );\n}